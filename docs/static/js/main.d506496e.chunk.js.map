{"version":3,"sources":["components/AddCategory.js","helpers/getGifs.js","components/GifCard.js","components/GifGrid.js","hooks/useFetchGifs.js","GifApp.js","index.js"],"names":["AddCategory","setCategories","useState","inputValue","setInputValue","onSubmit","e","preventDefault","trim","length","cat","toLowerCase","type","placeholder","value","onChange","target","getGifs","category","a","url","encodeURI","fetch","resp","json","data","gifs","map","img","id","title","images","downsized_medium","GifCard","Card","border","style","width","className","Img","variant","src","alt","Body","Title","Text","GifGrid","loading","state","setState","useEffect","then","imgs","useFetchGifs","Row","xs","md","lg","Col","GifApp","categories","Container","ReactDOM","render","document","getElementById"],"mappings":"+LAoCeA,EAjCK,SAAC,GAAuB,IAArBC,EAAoB,EAApBA,cAEnB,EAAoCC,mBAAS,IAA7C,mBAAOC,EAAP,KAAmBC,EAAnB,KAeA,OACI,sBAAMC,SATW,SAACC,GAClBA,EAAEC,iBACEJ,EAAWK,OAAOC,OAAS,IAC3BR,GAAc,SAAAS,GAAG,OAAKP,EAAWQ,eAAhB,mBAAkCD,OACnDN,EAAc,MAKlB,SACI,uBACIQ,KAAK,OACLC,YAAY,SACZC,MAAOX,EACPY,SAnBc,SAACT,GAEvBF,EAAcE,EAAEU,OAAOF,a,gCCPlBG,EAAO,uCAAG,WAAOC,GAAP,uBAAAC,EAAA,6DAEbC,EAFa,iDAEmCC,UAAUH,GAF7C,+DAGAI,MAAMF,GAHN,cAGbG,EAHa,gBAIIA,EAAKC,OAJT,uBAIXC,EAJW,EAIXA,KAEFC,EAAOD,EAAKE,KAAI,SAAAC,GAAQ,IAAD,EACzB,MAAO,CACHC,GAAID,EAAIC,GACRC,MAAOF,EAAIE,MACXV,IAAG,UAAEQ,EAAIG,cAAN,aAAE,EAAYC,iBAAiBZ,QAVvB,kBAcZM,GAdY,4CAAH,sD,wBCkBLO,EAjBC,SAAC,GAAuB,EAArBJ,GAAsB,IAAlBC,EAAiB,EAAjBA,MAAOV,EAAU,EAAVA,IAC1B,OACI,eAACc,EAAA,EAAD,CACIC,OAAO,UACPC,MAAO,CAAEC,MAAO,SAChBC,UAAU,mDAHd,UAII,cAACJ,EAAA,EAAKK,IAAN,CAAUC,QAAQ,MAAMC,IAAKrB,EAAKsB,IAAI,UAAUJ,UAAU,SAC1D,eAACJ,EAAA,EAAKS,KAAN,WACI,cAACT,EAAA,EAAKU,MAAN,CAAYN,UAAU,OAAtB,SAA8BR,IAC9B,cAACI,EAAA,EAAKW,KAAN,WCiBDC,EAvBC,SAAC,GAAkB,IAAhB5B,EAAe,EAAfA,SAEf,ECLwB,SAACA,GAEzB,MAA0BhB,mBAAS,CAC/BuB,KAAM,GACNsB,SAAS,IAFb,mBAAOC,EAAP,KAAcC,EAAd,KAeA,OAVAC,qBAAU,WACNjC,EAAQC,GACHiC,MAAK,SAAAC,GACFH,EAAS,CACLxB,KAAM2B,EACNL,SAAS,SAGtB,CAAC7B,IAEG8B,EDZ2BK,CAAanC,GAAjCa,EAAd,EAAQN,KAAcsB,EAAtB,EAAsBA,QAEtB,OACI,qCACI,oBAAIT,UAAU,oCAAd,SAAmDpB,IAElD6B,GAAW,mBAAGT,UAAU,0CAAb,wBAEZ,cAACgB,EAAA,EAAD,CAAKC,GAAI,EAAGC,GAAI,EAAGC,GAAI,EAAGnB,UAAU,MAApC,SACKP,EAAOJ,KAAI,SAACC,GAAD,MAAS,CACjB,cAAC8B,EAAA,EAAD,UACI,cAAC,EAAD,eACQ9B,KAFFA,aEOf+B,EApBA,WAEX,MAAoCzD,mBAAS,CAAC,aAA9C,mBAAO0D,EAAP,KAAmB3D,EAAnB,KAEA,OACI,mCACI,eAAC4D,EAAA,EAAD,WACI,oBAAIvB,UAAU,SAAd,oBACA,cAAC,EAAD,CAAarC,cAAeA,IAC5B,uBACC2D,EAAWjC,KAAI,SAACT,GAAD,MAAc,CAC1B,cAAC,EAAD,CAEIA,SAAUA,GADLA,a,MCV7B4C,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.d506496e.chunk.js","sourcesContent":["import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\n\nconst AddCategory = ({ setCategories }) => {\n\n    const [inputValue, setInputValue] = useState('');\n\n    const handleInputChange = (e) => {\n        // console.log(e.target.value);\n        setInputValue(e.target.value);\n    }\n\n    const handleSubmit = (e) => {\n        e.preventDefault();\n        if (inputValue.trim().length > 2) {\n            setCategories(cat => [inputValue.toLowerCase(), ...cat]);\n            setInputValue('');\n        }\n    }\n\n    return (\n        <form onSubmit={handleSubmit}>\n            <input\n                type='text'\n                placeholder='Search'\n                value={inputValue}\n                onChange={handleInputChange}\n            />\n        </form>\n    );\n}\n\nAddCategory.propTypes = {\n    setCategories: PropTypes.func.isRequired,\n}\n\nexport default AddCategory;","\n\nexport const getGifs = async (category) => {\n\n    const url = `https://api.giphy.com/v1/gifs/search?q=${encodeURI(category)}&limit=15&api_key=5J2p6Fou891x13TFWkbxudIQdcPGaXyK`;\n    const resp = await fetch(url);\n    const { data } = await resp.json();\n\n    const gifs = data.map(img => {\n        return {\n            id: img.id,\n            title: img.title,\n            url: img.images?.downsized_medium.url\n        }\n    })\n\n    return gifs;\n}","import React from 'react';\nimport { Card } from 'react-bootstrap';\n\nconst GifCard = ({ id, title, url }) => {\n    return (\n        <Card\n            border=\"primary\"\n            style={{ width: '20rem' }}\n            className=\"container mb-4 animate__animated animate__fadeIn\">\n            <Card.Img variant=\"top\" src={url} alt=\"img-gif\" className=\"mt-4\" />\n            <Card.Body>\n                <Card.Title className='text'>{title}</Card.Title>\n                <Card.Text>\n                    {/* {id} */}\n                </Card.Text>\n            </Card.Body>\n        </Card>\n    );\n}\n\nexport default GifCard;","import React from 'react';\nimport { useFetchGifs } from '../hooks/useFetchGifs';\nimport { Col, Row } from 'react-bootstrap';\n\nimport GifCard from './GifCard';\n\nconst GifGrid = ({ category }) => {\n\n    const { data: images, loading } = useFetchGifs(category);\n\n    return (\n        <>\n            <h3 className='animate__animated animate__fadeIn'>{category}</h3>\n\n            {loading && <p className='animate__animated animate__flash center'>Loading...</p>}\n\n            <Row xs={1} md={2} lg={3} className=\"g-4\">\n                {images.map((img) => [\n                    <Col key={img}>\n                        <GifCard\n                            {...img}\n                        />\n                    </Col>\n                ])}\n            </Row>\n        </>\n    );\n}\n\nexport default GifGrid;","import { useEffect, useState } from \"react\"\nimport { getGifs } from \"../helpers/getGifs\";\n\nexport const useFetchGifs = (category) => {\n\n    const [state, setState] = useState({\n        data: [],\n        loading: true\n    });\n\n    useEffect(() => {\n        getGifs(category)\n            .then(imgs => {\n                setState({\n                    data: imgs,\n                    loading: false\n                })\n            });\n    }, [category]);\n\n    return state; // {data: [], loading: true};\n}","import React, { useState } from 'react';\nimport { Container } from 'react-bootstrap';\nimport AddCategory from './components/AddCategory';\nimport GifGrid from './components/GifGrid';\n\nconst GifApp = () => {\n\n    const [categories, setCategories] = useState(['Facepalm']);\n\n    return (\n        <>\n            <Container>\n                <h2 className='center'>YouGif</h2>\n                <AddCategory setCategories={setCategories} />\n                <hr />\n                {categories.map((category) => [\n                    <GifGrid\n                        key={category}\n                        category={category} />\n                ])}\n            </Container>\n        </>\n    );\n}\n\nexport default GifApp;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport GifApp from './GifApp';\n\nimport './index.css';\n\nReactDOM.render(\n  <GifApp />,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}